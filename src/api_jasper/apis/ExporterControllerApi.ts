/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BaseRequestModel,
  BaseResponseModel,
} from '../models/index';
import {
    BaseRequestModelFromJSON,
    BaseRequestModelToJSON,
    BaseResponseModelFromJSON,
    BaseResponseModelToJSON,
} from '../models/index';

export interface DownloadFileRequest {
    filename: string;
}

export interface ExportPDFRequest {
    baseRequestModel: BaseRequestModel;
}

/**
 * 
 */
export class ExporterControllerApi extends runtime.BaseAPI {

    /**
     */
    async downloadFileRaw(requestParameters: DownloadFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Blob>> {
        if (requestParameters['filename'] == null) {
            throw new runtime.RequiredError(
                'filename',
                'Required parameter "filename" was null or undefined when calling downloadFile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/download/{filename}`.replace(`{${"filename"}}`, encodeURIComponent(String(requestParameters['filename']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.BlobApiResponse(response);
    }

    /**
     */
    async downloadFile(requestParameters: DownloadFileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Blob> {
        const response = await this.downloadFileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async exportPDFRaw(requestParameters: ExportPDFRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BaseResponseModel>> {
        if (requestParameters['baseRequestModel'] == null) {
            throw new runtime.RequiredError(
                'baseRequestModel',
                'Required parameter "baseRequestModel" was null or undefined when calling exportPDF().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/export-pdf`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BaseRequestModelToJSON(requestParameters['baseRequestModel']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async exportPDF(requestParameters: ExportPDFRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BaseResponseModel> {
        const response = await this.exportPDFRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
