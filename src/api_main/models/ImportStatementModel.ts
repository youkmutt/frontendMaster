/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VoucherMappingStatementModel } from './VoucherMappingStatementModel';
import {
    VoucherMappingStatementModelFromJSON,
    VoucherMappingStatementModelFromJSONTyped,
    VoucherMappingStatementModelToJSON,
    VoucherMappingStatementModelToJSONTyped,
} from './VoucherMappingStatementModel';

/**
 * 
 * @export
 * @interface ImportStatementModel
 */
export interface ImportStatementModel {
    /**
     * 
     * @type {number}
     * @memberof ImportStatementModel
     */
    rowNumber?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportStatementModel
     */
    stmtId?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportStatementModel
     */
    bankAccountId?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportStatementModel
     */
    stmtTypeId?: number;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    bankAccountNo?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    bankAccountName?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    bankAccountType?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    bankBranchCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    stmtTypeCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    uuid?: string;
    /**
     * 
     * @type {Date}
     * @memberof ImportStatementModel
     */
    stmtDatetime?: Date;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    stmtDescription?: string;
    /**
     * 
     * @type {number}
     * @memberof ImportStatementModel
     */
    stmtMoneyMovement?: number;
    /**
     * 
     * @type {number}
     * @memberof ImportStatementModel
     */
    stmtMoneyCumulative?: number;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    chequeNo?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    sequenceNo?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    ref1?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    ref2?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    ref3?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    terminalId?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    channel?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportStatementModel
     */
    remark?: string;
    /**
     * 
     * @type {number}
     * @memberof ImportStatementModel
     */
    companyId?: number;
    /**
     * 
     * @type {Array<VoucherMappingStatementModel>}
     * @memberof ImportStatementModel
     */
    vouchers?: Array<VoucherMappingStatementModel>;
    /**
     * 
     * @type {number}
     * @memberof ImportStatementModel
     */
    rootOrganizationId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ImportStatementModel
     */
    activeFlag?: boolean;
}

/**
 * Check if a given object implements the ImportStatementModel interface.
 */
export function instanceOfImportStatementModel(value: object): value is ImportStatementModel {
    return true;
}

export function ImportStatementModelFromJSON(json: any): ImportStatementModel {
    return ImportStatementModelFromJSONTyped(json, false);
}

export function ImportStatementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportStatementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'rowNumber': json['row_number'] == null ? undefined : json['row_number'],
        'stmtId': json['stmt_id'] == null ? undefined : json['stmt_id'],
        'bankAccountId': json['bank_account_id'] == null ? undefined : json['bank_account_id'],
        'stmtTypeId': json['stmt_type_id'] == null ? undefined : json['stmt_type_id'],
        'bankAccountNo': json['bank_account_no'] == null ? undefined : json['bank_account_no'],
        'bankAccountName': json['bank_account_name'] == null ? undefined : json['bank_account_name'],
        'bankAccountType': json['bank_account_type'] == null ? undefined : json['bank_account_type'],
        'bankBranchCode': json['bank_branch_code'] == null ? undefined : json['bank_branch_code'],
        'stmtTypeCode': json['stmt_type_code'] == null ? undefined : json['stmt_type_code'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'stmtDatetime': json['stmt_datetime'] == null ? undefined : (new Date(json['stmt_datetime'])),
        'stmtDescription': json['stmt_description'] == null ? undefined : json['stmt_description'],
        'stmtMoneyMovement': json['stmt_money_movement'] == null ? undefined : json['stmt_money_movement'],
        'stmtMoneyCumulative': json['stmt_money_cumulative'] == null ? undefined : json['stmt_money_cumulative'],
        'chequeNo': json['cheque_no'] == null ? undefined : json['cheque_no'],
        'sequenceNo': json['sequence_no'] == null ? undefined : json['sequence_no'],
        'ref1': json['ref1'] == null ? undefined : json['ref1'],
        'ref2': json['ref2'] == null ? undefined : json['ref2'],
        'ref3': json['ref3'] == null ? undefined : json['ref3'],
        'terminalId': json['terminal_id'] == null ? undefined : json['terminal_id'],
        'channel': json['channel'] == null ? undefined : json['channel'],
        'remark': json['remark'] == null ? undefined : json['remark'],
        'companyId': json['company_id'] == null ? undefined : json['company_id'],
        'vouchers': json['vouchers'] == null ? undefined : ((json['vouchers'] as Array<any>).map(VoucherMappingStatementModelFromJSON)),
        'rootOrganizationId': json['root_organization_id'] == null ? undefined : json['root_organization_id'],
        'activeFlag': json['active_flag'] == null ? undefined : json['active_flag'],
    };
}

export function ImportStatementModelToJSON(json: any): ImportStatementModel {
    return ImportStatementModelToJSONTyped(json, false);
}

export function ImportStatementModelToJSONTyped(value?: ImportStatementModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'row_number': value['rowNumber'],
        'stmt_id': value['stmtId'],
        'bank_account_id': value['bankAccountId'],
        'stmt_type_id': value['stmtTypeId'],
        'bank_account_no': value['bankAccountNo'],
        'bank_account_name': value['bankAccountName'],
        'bank_account_type': value['bankAccountType'],
        'bank_branch_code': value['bankBranchCode'],
        'stmt_type_code': value['stmtTypeCode'],
        'uuid': value['uuid'],
        'stmt_datetime': value['stmtDatetime'] == null ? undefined : ((value['stmtDatetime']).toISOString()),
        'stmt_description': value['stmtDescription'],
        'stmt_money_movement': value['stmtMoneyMovement'],
        'stmt_money_cumulative': value['stmtMoneyCumulative'],
        'cheque_no': value['chequeNo'],
        'sequence_no': value['sequenceNo'],
        'ref1': value['ref1'],
        'ref2': value['ref2'],
        'ref3': value['ref3'],
        'terminal_id': value['terminalId'],
        'channel': value['channel'],
        'remark': value['remark'],
        'company_id': value['companyId'],
        'vouchers': value['vouchers'] == null ? undefined : ((value['vouchers'] as Array<any>).map(VoucherMappingStatementModelToJSON)),
        'root_organization_id': value['rootOrganizationId'],
        'active_flag': value['activeFlag'],
    };
}

