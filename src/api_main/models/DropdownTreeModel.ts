/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DropdownTreeModel
 */
export interface DropdownTreeModel {
    /**
     * 
     * @type {number}
     * @memberof DropdownTreeModel
     */
    key?: number;
    /**
     * 
     * @type {string}
     * @memberof DropdownTreeModel
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof DropdownTreeModel
     */
    data?: string;
    /**
     * 
     * @type {string}
     * @memberof DropdownTreeModel
     */
    icon?: string;
    /**
     * 
     * @type {Array<DropdownTreeModel>}
     * @memberof DropdownTreeModel
     */
    children?: Array<DropdownTreeModel>;
}

/**
 * Check if a given object implements the DropdownTreeModel interface.
 */
export function instanceOfDropdownTreeModel(value: object): value is DropdownTreeModel {
    return true;
}

export function DropdownTreeModelFromJSON(json: any): DropdownTreeModel {
    return DropdownTreeModelFromJSONTyped(json, false);
}

export function DropdownTreeModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DropdownTreeModel {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'] == null ? undefined : json['key'],
        'label': json['label'] == null ? undefined : json['label'],
        'data': json['data'] == null ? undefined : json['data'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(DropdownTreeModelFromJSON)),
    };
}

export function DropdownTreeModelToJSON(json: any): DropdownTreeModel {
    return DropdownTreeModelToJSONTyped(json, false);
}

export function DropdownTreeModelToJSONTyped(value?: DropdownTreeModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'key': value['key'],
        'label': value['label'],
        'data': value['data'],
        'icon': value['icon'],
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(DropdownTreeModelToJSON)),
    };
}

