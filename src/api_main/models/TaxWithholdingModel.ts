/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RefType } from './RefType';
import {
    RefTypeFromJSON,
    RefTypeFromJSONTyped,
    RefTypeToJSON,
    RefTypeToJSONTyped,
} from './RefType';

/**
 * 
 * @export
 * @interface TaxWithholdingModel
 */
export interface TaxWithholdingModel {
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    trnTaxId?: number;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    companyId?: number;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    organizationId?: number;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    refId?: number;
    /**
     * 
     * @type {RefType}
     * @memberof TaxWithholdingModel
     */
    refType?: RefType;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    taxType?: number;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    incomeTypeId?: number;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    taxOtherType?: number;
    /**
     * 
     * @type {string}
     * @memberof TaxWithholdingModel
     */
    branchCode?: string;
    /**
     * 
     * @type {Date}
     * @memberof TaxWithholdingModel
     */
    taxDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    taxRate?: number;
    /**
     * 
     * @type {string}
     * @memberof TaxWithholdingModel
     */
    taxRemark?: string;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    amountBeforeTax?: number;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    taxAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof TaxWithholdingModel
     */
    amountAfterTax?: number;
}



/**
 * Check if a given object implements the TaxWithholdingModel interface.
 */
export function instanceOfTaxWithholdingModel(value: object): value is TaxWithholdingModel {
    return true;
}

export function TaxWithholdingModelFromJSON(json: any): TaxWithholdingModel {
    return TaxWithholdingModelFromJSONTyped(json, false);
}

export function TaxWithholdingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxWithholdingModel {
    if (json == null) {
        return json;
    }
    return {
        
        'trnTaxId': json['trn_tax_id'] == null ? undefined : json['trn_tax_id'],
        'companyId': json['company_id'] == null ? undefined : json['company_id'],
        'organizationId': json['organization_id'] == null ? undefined : json['organization_id'],
        'refId': json['ref_id'] == null ? undefined : json['ref_id'],
        'refType': json['ref_type'] == null ? undefined : RefTypeFromJSON(json['ref_type']),
        'taxType': json['tax_type'] == null ? undefined : json['tax_type'],
        'incomeTypeId': json['income_type_id'] == null ? undefined : json['income_type_id'],
        'taxOtherType': json['tax_other_type'] == null ? undefined : json['tax_other_type'],
        'branchCode': json['branch_code'] == null ? undefined : json['branch_code'],
        'taxDate': json['tax_date'] == null ? undefined : (new Date(json['tax_date'])),
        'taxRate': json['tax_rate'] == null ? undefined : json['tax_rate'],
        'taxRemark': json['tax_remark'] == null ? undefined : json['tax_remark'],
        'amountBeforeTax': json['amount_before_tax'] == null ? undefined : json['amount_before_tax'],
        'taxAmount': json['tax_amount'] == null ? undefined : json['tax_amount'],
        'amountAfterTax': json['amount_after_tax'] == null ? undefined : json['amount_after_tax'],
    };
}

export function TaxWithholdingModelToJSON(json: any): TaxWithholdingModel {
    return TaxWithholdingModelToJSONTyped(json, false);
}

export function TaxWithholdingModelToJSONTyped(value?: TaxWithholdingModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'trn_tax_id': value['trnTaxId'],
        'company_id': value['companyId'],
        'organization_id': value['organizationId'],
        'ref_id': value['refId'],
        'ref_type': RefTypeToJSON(value['refType']),
        'tax_type': value['taxType'],
        'income_type_id': value['incomeTypeId'],
        'tax_other_type': value['taxOtherType'],
        'branch_code': value['branchCode'],
        'tax_date': value['taxDate'] == null ? undefined : ((value['taxDate']).toISOString()),
        'tax_rate': value['taxRate'],
        'tax_remark': value['taxRemark'],
        'amount_before_tax': value['amountBeforeTax'],
        'tax_amount': value['taxAmount'],
        'amount_after_tax': value['amountAfterTax'],
    };
}

