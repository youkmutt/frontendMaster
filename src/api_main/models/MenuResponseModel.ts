/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MenuResponseModel
 */
export interface MenuResponseModel {
    /**
     * 
     * @type {number}
     * @memberof MenuResponseModel
     */
    menuId?: number;
    /**
     * 
     * @type {string}
     * @memberof MenuResponseModel
     */
    menuName?: string;
    /**
     * 
     * @type {string}
     * @memberof MenuResponseModel
     */
    menuRoute?: string;
    /**
     * 
     * @type {string}
     * @memberof MenuResponseModel
     */
    menuIcon?: string;
    /**
     * 
     * @type {number}
     * @memberof MenuResponseModel
     */
    menuParent?: number;
    /**
     * 
     * @type {string}
     * @memberof MenuResponseModel
     */
    menuCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MenuResponseModel
     */
    isAllow?: boolean;
    /**
     * 
     * @type {Array<MenuResponseModel>}
     * @memberof MenuResponseModel
     */
    subMenu?: Array<MenuResponseModel>;
    /**
     * 
     * @type {number}
     * @memberof MenuResponseModel
     */
    totalNotificaition?: number;
}

/**
 * Check if a given object implements the MenuResponseModel interface.
 */
export function instanceOfMenuResponseModel(value: object): value is MenuResponseModel {
    return true;
}

export function MenuResponseModelFromJSON(json: any): MenuResponseModel {
    return MenuResponseModelFromJSONTyped(json, false);
}

export function MenuResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MenuResponseModel {
    if (json == null) {
        return json;
    }
    return {
        
        'menuId': json['menu_id'] == null ? undefined : json['menu_id'],
        'menuName': json['menu_name'] == null ? undefined : json['menu_name'],
        'menuRoute': json['menu_route'] == null ? undefined : json['menu_route'],
        'menuIcon': json['menu_icon'] == null ? undefined : json['menu_icon'],
        'menuParent': json['menu_parent'] == null ? undefined : json['menu_parent'],
        'menuCode': json['menu_code'] == null ? undefined : json['menu_code'],
        'isAllow': json['is_allow'] == null ? undefined : json['is_allow'],
        'subMenu': json['sub_menu'] == null ? undefined : ((json['sub_menu'] as Array<any>).map(MenuResponseModelFromJSON)),
        'totalNotificaition': json['total_notificaition'] == null ? undefined : json['total_notificaition'],
    };
}

export function MenuResponseModelToJSON(json: any): MenuResponseModel {
    return MenuResponseModelToJSONTyped(json, false);
}

export function MenuResponseModelToJSONTyped(value?: MenuResponseModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'menu_id': value['menuId'],
        'menu_name': value['menuName'],
        'menu_route': value['menuRoute'],
        'menu_icon': value['menuIcon'],
        'menu_parent': value['menuParent'],
        'menu_code': value['menuCode'],
        'is_allow': value['isAllow'],
        'sub_menu': value['subMenu'] == null ? undefined : ((value['subMenu'] as Array<any>).map(MenuResponseModelToJSON)),
        'total_notificaition': value['totalNotificaition'],
    };
}

