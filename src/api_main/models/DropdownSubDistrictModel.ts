/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DropdownSubDistrictModel
 */
export interface DropdownSubDistrictModel {
    /**
     * 
     * @type {number}
     * @memberof DropdownSubDistrictModel
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof DropdownSubDistrictModel
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof DropdownSubDistrictModel
     */
    value?: string;
    /**
     * 
     * @type {string}
     * @memberof DropdownSubDistrictModel
     */
    zipCode?: string;
}

/**
 * Check if a given object implements the DropdownSubDistrictModel interface.
 */
export function instanceOfDropdownSubDistrictModel(value: object): value is DropdownSubDistrictModel {
    return true;
}

export function DropdownSubDistrictModelFromJSON(json: any): DropdownSubDistrictModel {
    return DropdownSubDistrictModelFromJSONTyped(json, false);
}

export function DropdownSubDistrictModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DropdownSubDistrictModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'key': json['key'] == null ? undefined : json['key'],
        'value': json['value'] == null ? undefined : json['value'],
        'zipCode': json['zip_code'] == null ? undefined : json['zip_code'],
    };
}

export function DropdownSubDistrictModelToJSON(json: any): DropdownSubDistrictModel {
    return DropdownSubDistrictModelToJSONTyped(json, false);
}

export function DropdownSubDistrictModelToJSONTyped(value?: DropdownSubDistrictModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'key': value['key'],
        'value': value['value'],
        'zip_code': value['zipCode'],
    };
}

