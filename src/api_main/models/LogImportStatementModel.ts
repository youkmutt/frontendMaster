/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DateOnly } from './DateOnly';
import {
    DateOnlyFromJSON,
    DateOnlyFromJSONTyped,
    DateOnlyToJSON,
    DateOnlyToJSONTyped,
} from './DateOnly';

/**
 * 
 * @export
 * @interface LogImportStatementModel
 */
export interface LogImportStatementModel {
    /**
     * 
     * @type {number}
     * @memberof LogImportStatementModel
     */
    rowNumber?: number;
    /**
     * 
     * @type {number}
     * @memberof LogImportStatementModel
     */
    importStmtId?: number;
    /**
     * 
     * @type {number}
     * @memberof LogImportStatementModel
     */
    bankAccountId?: number;
    /**
     * 
     * @type {string}
     * @memberof LogImportStatementModel
     */
    bankAccountName?: string;
    /**
     * 
     * @type {string}
     * @memberof LogImportStatementModel
     */
    bankAccountNo?: string;
    /**
     * 
     * @type {string}
     * @memberof LogImportStatementModel
     */
    bankAccountType?: string;
    /**
     * 
     * @type {string}
     * @memberof LogImportStatementModel
     */
    impFileName?: string;
    /**
     * 
     * @type {string}
     * @memberof LogImportStatementModel
     */
    impFilePath?: string;
    /**
     * 
     * @type {string}
     * @memberof LogImportStatementModel
     */
    impFileType?: string;
    /**
     * 
     * @type {number}
     * @memberof LogImportStatementModel
     */
    impFileSizes?: number;
    /**
     * 
     * @type {number}
     * @memberof LogImportStatementModel
     */
    impFileRows?: number;
    /**
     * 
     * @type {number}
     * @memberof LogImportStatementModel
     */
    moneyMovement?: number;
    /**
     * 
     * @type {number}
     * @memberof LogImportStatementModel
     */
    moneyCumulative?: number;
    /**
     * 
     * @type {DateOnly}
     * @memberof LogImportStatementModel
     */
    dateStart?: DateOnly;
    /**
     * 
     * @type {DateOnly}
     * @memberof LogImportStatementModel
     */
    dateEnd?: DateOnly;
    /**
     * 
     * @type {string}
     * @memberof LogImportStatementModel
     */
    cancelRemark?: string;
    /**
     * 
     * @type {Date}
     * @memberof LogImportStatementModel
     */
    createDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof LogImportStatementModel
     */
    activeFlag?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof LogImportStatementModel
     */
    updateDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof LogImportStatementModel
     */
    updateBy?: string;
}

/**
 * Check if a given object implements the LogImportStatementModel interface.
 */
export function instanceOfLogImportStatementModel(value: object): value is LogImportStatementModel {
    return true;
}

export function LogImportStatementModelFromJSON(json: any): LogImportStatementModel {
    return LogImportStatementModelFromJSONTyped(json, false);
}

export function LogImportStatementModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogImportStatementModel {
    if (json == null) {
        return json;
    }
    return {
        
        'rowNumber': json['row_number'] == null ? undefined : json['row_number'],
        'importStmtId': json['import_stmt_id'] == null ? undefined : json['import_stmt_id'],
        'bankAccountId': json['bank_account_id'] == null ? undefined : json['bank_account_id'],
        'bankAccountName': json['bank_account_name'] == null ? undefined : json['bank_account_name'],
        'bankAccountNo': json['bank_account_no'] == null ? undefined : json['bank_account_no'],
        'bankAccountType': json['bank_account_type'] == null ? undefined : json['bank_account_type'],
        'impFileName': json['imp_file_name'] == null ? undefined : json['imp_file_name'],
        'impFilePath': json['imp_file_path'] == null ? undefined : json['imp_file_path'],
        'impFileType': json['imp_file_type'] == null ? undefined : json['imp_file_type'],
        'impFileSizes': json['imp_file_sizes'] == null ? undefined : json['imp_file_sizes'],
        'impFileRows': json['imp_file_rows'] == null ? undefined : json['imp_file_rows'],
        'moneyMovement': json['money_movement'] == null ? undefined : json['money_movement'],
        'moneyCumulative': json['money_cumulative'] == null ? undefined : json['money_cumulative'],
        'dateStart': json['date_start'] == null ? undefined : DateOnlyFromJSON(json['date_start']),
        'dateEnd': json['date_end'] == null ? undefined : DateOnlyFromJSON(json['date_end']),
        'cancelRemark': json['cancel_remark'] == null ? undefined : json['cancel_remark'],
        'createDate': json['create_date'] == null ? undefined : (new Date(json['create_date'])),
        'activeFlag': json['active_flag'] == null ? undefined : json['active_flag'],
        'updateDate': json['update_date'] == null ? undefined : (new Date(json['update_date'])),
        'updateBy': json['update_by'] == null ? undefined : json['update_by'],
    };
}

export function LogImportStatementModelToJSON(json: any): LogImportStatementModel {
    return LogImportStatementModelToJSONTyped(json, false);
}

export function LogImportStatementModelToJSONTyped(value?: LogImportStatementModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'row_number': value['rowNumber'],
        'import_stmt_id': value['importStmtId'],
        'bank_account_id': value['bankAccountId'],
        'bank_account_name': value['bankAccountName'],
        'bank_account_no': value['bankAccountNo'],
        'bank_account_type': value['bankAccountType'],
        'imp_file_name': value['impFileName'],
        'imp_file_path': value['impFilePath'],
        'imp_file_type': value['impFileType'],
        'imp_file_sizes': value['impFileSizes'],
        'imp_file_rows': value['impFileRows'],
        'money_movement': value['moneyMovement'],
        'money_cumulative': value['moneyCumulative'],
        'date_start': DateOnlyToJSON(value['dateStart']),
        'date_end': DateOnlyToJSON(value['dateEnd']),
        'cancel_remark': value['cancelRemark'],
        'create_date': value['createDate'] == null ? undefined : ((value['createDate']).toISOString()),
        'active_flag': value['activeFlag'],
        'update_date': value['updateDate'] == null ? undefined : ((value['updateDate']).toISOString()),
        'update_by': value['updateBy'],
    };
}

