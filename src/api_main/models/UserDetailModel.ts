/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MenuResponseModel } from './MenuResponseModel';
import {
    MenuResponseModelFromJSON,
    MenuResponseModelFromJSONTyped,
    MenuResponseModelToJSON,
    MenuResponseModelToJSONTyped,
} from './MenuResponseModel';
import type { OrganizationModel } from './OrganizationModel';
import {
    OrganizationModelFromJSON,
    OrganizationModelFromJSONTyped,
    OrganizationModelToJSON,
    OrganizationModelToJSONTyped,
} from './OrganizationModel';
import type { RoleModel } from './RoleModel';
import {
    RoleModelFromJSON,
    RoleModelFromJSONTyped,
    RoleModelToJSON,
    RoleModelToJSONTyped,
} from './RoleModel';
import type { PermissionResponseModel } from './PermissionResponseModel';
import {
    PermissionResponseModelFromJSON,
    PermissionResponseModelFromJSONTyped,
    PermissionResponseModelToJSON,
    PermissionResponseModelToJSONTyped,
} from './PermissionResponseModel';
import type { DataAccessType } from './DataAccessType';
import {
    DataAccessTypeFromJSON,
    DataAccessTypeFromJSONTyped,
    DataAccessTypeToJSON,
    DataAccessTypeToJSONTyped,
} from './DataAccessType';
import type { UserType } from './UserType';
import {
    UserTypeFromJSON,
    UserTypeFromJSONTyped,
    UserTypeToJSON,
    UserTypeToJSONTyped,
} from './UserType';
import type { TokenModel } from './TokenModel';
import {
    TokenModelFromJSON,
    TokenModelFromJSONTyped,
    TokenModelToJSON,
    TokenModelToJSONTyped,
} from './TokenModel';

/**
 * 
 * @export
 * @interface UserDetailModel
 */
export interface UserDetailModel {
    /**
     * 
     * @type {number}
     * @memberof UserDetailModel
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    username?: string;
    /**
     * 
     * @type {UserType}
     * @memberof UserDetailModel
     */
    userType?: UserType;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    lastName?: string;
    /**
     * 
     * @type {number}
     * @memberof UserDetailModel
     */
    employeeId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    employeeCode?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    mobilePhone?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserDetailModel
     */
    activeFlag?: boolean;
    /**
     * 
     * @type {DataAccessType}
     * @memberof UserDetailModel
     */
    dataAccessType?: DataAccessType;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    readonly dataAccessTypeName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    orgName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    companyName?: string;
    /**
     * 
     * @type {Array<RoleModel>}
     * @memberof UserDetailModel
     */
    roles?: Array<RoleModel>;
    /**
     * 
     * @type {Array<OrganizationModel>}
     * @memberof UserDetailModel
     */
    organization?: Array<OrganizationModel>;
    /**
     * 
     * @type {TokenModel}
     * @memberof UserDetailModel
     */
    token?: TokenModel;
    /**
     * 
     * @type {Array<MenuResponseModel>}
     * @memberof UserDetailModel
     */
    menus?: Array<MenuResponseModel>;
    /**
     * 
     * @type {Array<PermissionResponseModel>}
     * @memberof UserDetailModel
     */
    permissions?: Array<PermissionResponseModel>;
    /**
     * 
     * @type {boolean}
     * @memberof UserDetailModel
     */
    changePassword?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserDetailModel
     */
    userProfilePath?: string;
}



/**
 * Check if a given object implements the UserDetailModel interface.
 */
export function instanceOfUserDetailModel(value: object): value is UserDetailModel {
    return true;
}

export function UserDetailModelFromJSON(json: any): UserDetailModel {
    return UserDetailModelFromJSONTyped(json, false);
}

export function UserDetailModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetailModel {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'username': json['username'] == null ? undefined : json['username'],
        'userType': json['user_type'] == null ? undefined : UserTypeFromJSON(json['user_type']),
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'employeeId': json['employee_id'] == null ? undefined : json['employee_id'],
        'employeeCode': json['employee_code'] == null ? undefined : json['employee_code'],
        'email': json['email'] == null ? undefined : json['email'],
        'mobilePhone': json['mobile_phone'] == null ? undefined : json['mobile_phone'],
        'activeFlag': json['active_flag'] == null ? undefined : json['active_flag'],
        'dataAccessType': json['data_access_type'] == null ? undefined : DataAccessTypeFromJSON(json['data_access_type']),
        'dataAccessTypeName': json['data_access_type_name'] == null ? undefined : json['data_access_type_name'],
        'orgName': json['org_name'] == null ? undefined : json['org_name'],
        'companyName': json['company_name'] == null ? undefined : json['company_name'],
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(RoleModelFromJSON)),
        'organization': json['organization'] == null ? undefined : ((json['organization'] as Array<any>).map(OrganizationModelFromJSON)),
        'token': json['token'] == null ? undefined : TokenModelFromJSON(json['token']),
        'menus': json['menus'] == null ? undefined : ((json['menus'] as Array<any>).map(MenuResponseModelFromJSON)),
        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(PermissionResponseModelFromJSON)),
        'changePassword': json['change_password'] == null ? undefined : json['change_password'],
        'userProfilePath': json['user_profile_path'] == null ? undefined : json['user_profile_path'],
    };
}

export function UserDetailModelToJSON(json: any): UserDetailModel {
    return UserDetailModelToJSONTyped(json, false);
}

export function UserDetailModelToJSONTyped(value?: Omit<UserDetailModel, 'data_access_type_name'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'username': value['username'],
        'user_type': UserTypeToJSON(value['userType']),
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'employee_id': value['employeeId'],
        'employee_code': value['employeeCode'],
        'email': value['email'],
        'mobile_phone': value['mobilePhone'],
        'active_flag': value['activeFlag'],
        'data_access_type': DataAccessTypeToJSON(value['dataAccessType']),
        'org_name': value['orgName'],
        'company_name': value['companyName'],
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(RoleModelToJSON)),
        'organization': value['organization'] == null ? undefined : ((value['organization'] as Array<any>).map(OrganizationModelToJSON)),
        'token': TokenModelToJSON(value['token']),
        'menus': value['menus'] == null ? undefined : ((value['menus'] as Array<any>).map(MenuResponseModelToJSON)),
        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(PermissionResponseModelToJSON)),
        'change_password': value['changePassword'],
        'user_profile_path': value['userProfilePath'],
    };
}

