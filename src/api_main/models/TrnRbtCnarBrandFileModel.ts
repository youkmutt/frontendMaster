/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TrnRbtCnarBrandFileModel
 */
export interface TrnRbtCnarBrandFileModel {
    /**
     * 
     * @type {string}
     * @memberof TrnRbtCnarBrandFileModel
     */
    fileName?: string;
    /**
     * 
     * @type {string}
     * @memberof TrnRbtCnarBrandFileModel
     */
    filePath?: string;
    /**
     * 
     * @type {number}
     * @memberof TrnRbtCnarBrandFileModel
     */
    backToBackId?: number;
}

/**
 * Check if a given object implements the TrnRbtCnarBrandFileModel interface.
 */
export function instanceOfTrnRbtCnarBrandFileModel(value: object): value is TrnRbtCnarBrandFileModel {
    return true;
}

export function TrnRbtCnarBrandFileModelFromJSON(json: any): TrnRbtCnarBrandFileModel {
    return TrnRbtCnarBrandFileModelFromJSONTyped(json, false);
}

export function TrnRbtCnarBrandFileModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrnRbtCnarBrandFileModel {
    if (json == null) {
        return json;
    }
    return {
        
        'fileName': json['file_name'] == null ? undefined : json['file_name'],
        'filePath': json['file_path'] == null ? undefined : json['file_path'],
        'backToBackId': json['back_to_back_id'] == null ? undefined : json['back_to_back_id'],
    };
}

export function TrnRbtCnarBrandFileModelToJSON(json: any): TrnRbtCnarBrandFileModel {
    return TrnRbtCnarBrandFileModelToJSONTyped(json, false);
}

export function TrnRbtCnarBrandFileModelToJSONTyped(value?: TrnRbtCnarBrandFileModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'file_name': value['fileName'],
        'file_path': value['filePath'],
        'back_to_back_id': value['backToBackId'],
    };
}

