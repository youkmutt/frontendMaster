/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImportStatementModel } from './ImportStatementModel';
import {
    ImportStatementModelFromJSON,
    ImportStatementModelFromJSONTyped,
    ImportStatementModelToJSON,
    ImportStatementModelToJSONTyped,
} from './ImportStatementModel';
import type { LogImportStatementModel } from './LogImportStatementModel';
import {
    LogImportStatementModelFromJSON,
    LogImportStatementModelFromJSONTyped,
    LogImportStatementModelToJSON,
    LogImportStatementModelToJSONTyped,
} from './LogImportStatementModel';

/**
 * 
 * @export
 * @interface ImportStatementDetailModel
 */
export interface ImportStatementDetailModel {
    /**
     * 
     * @type {LogImportStatementModel}
     * @memberof ImportStatementDetailModel
     */
    logImportStatement?: LogImportStatementModel;
    /**
     * 
     * @type {Array<ImportStatementModel>}
     * @memberof ImportStatementDetailModel
     */
    importStatements?: Array<ImportStatementModel>;
}

/**
 * Check if a given object implements the ImportStatementDetailModel interface.
 */
export function instanceOfImportStatementDetailModel(value: object): value is ImportStatementDetailModel {
    return true;
}

export function ImportStatementDetailModelFromJSON(json: any): ImportStatementDetailModel {
    return ImportStatementDetailModelFromJSONTyped(json, false);
}

export function ImportStatementDetailModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportStatementDetailModel {
    if (json == null) {
        return json;
    }
    return {
        
        'logImportStatement': json['logImportStatement'] == null ? undefined : LogImportStatementModelFromJSON(json['logImportStatement']),
        'importStatements': json['importStatements'] == null ? undefined : ((json['importStatements'] as Array<any>).map(ImportStatementModelFromJSON)),
    };
}

export function ImportStatementDetailModelToJSON(json: any): ImportStatementDetailModel {
    return ImportStatementDetailModelToJSONTyped(json, false);
}

export function ImportStatementDetailModelToJSONTyped(value?: ImportStatementDetailModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'logImportStatement': LogImportStatementModelToJSON(value['logImportStatement']),
        'importStatements': value['importStatements'] == null ? undefined : ((value['importStatements'] as Array<any>).map(ImportStatementModelToJSON)),
    };
}

