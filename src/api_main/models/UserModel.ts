/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoleModel } from './RoleModel';
import {
    RoleModelFromJSON,
    RoleModelFromJSONTyped,
    RoleModelToJSON,
    RoleModelToJSONTyped,
} from './RoleModel';

/**
 * 
 * @export
 * @interface UserModel
 */
export interface UserModel {
    /**
     * 
     * @type {number}
     * @memberof UserModel
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserModel
     */
    firstnameTh?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserModel
     */
    activeFlag?: boolean;
    /**
     * 
     * @type {Array<RoleModel>}
     * @memberof UserModel
     */
    roles?: Array<RoleModel>;
    /**
     * 
     * @type {Date}
     * @memberof UserModel
     */
    lastLoginDate?: Date;
}

/**
 * Check if a given object implements the UserModel interface.
 */
export function instanceOfUserModel(value: object): value is UserModel {
    return true;
}

export function UserModelFromJSON(json: any): UserModel {
    return UserModelFromJSONTyped(json, false);
}

export function UserModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserModel {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'username': json['username'] == null ? undefined : json['username'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'email': json['email'] == null ? undefined : json['email'],
        'firstnameTh': json['firstname_th'] == null ? undefined : json['firstname_th'],
        'activeFlag': json['active_flag'] == null ? undefined : json['active_flag'],
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(RoleModelFromJSON)),
        'lastLoginDate': json['last_login_date'] == null ? undefined : (new Date(json['last_login_date'])),
    };
}

export function UserModelToJSON(json: any): UserModel {
    return UserModelToJSONTyped(json, false);
}

export function UserModelToJSONTyped(value?: UserModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'username': value['username'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'email': value['email'],
        'firstname_th': value['firstnameTh'],
        'active_flag': value['activeFlag'],
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(RoleModelToJSON)),
        'last_login_date': value['lastLoginDate'] == null ? undefined : ((value['lastLoginDate']).toISOString()),
    };
}

