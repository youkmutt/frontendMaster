/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RebateSendApcnFaB2bModel,
  RebateSendArcnBrnFaModel,
  RebateSendArcnInhFaModel,
  StringBaseResponseModel,
} from '../models/index';
import {
    RebateSendApcnFaB2bModelFromJSON,
    RebateSendApcnFaB2bModelToJSON,
    RebateSendArcnBrnFaModelFromJSON,
    RebateSendArcnBrnFaModelToJSON,
    RebateSendArcnInhFaModelFromJSON,
    RebateSendArcnInhFaModelToJSON,
    StringBaseResponseModelFromJSON,
    StringBaseResponseModelToJSON,
} from '../models/index';

export interface ApiRebateRebateSendApcnFaB2bPostRequest {
    body?: RebateSendApcnFaB2bModel;
}

export interface ApiRebateRebateSendApcnFaMnlPostRequest {
    body?: RebateSendApcnFaB2bModel;
}

export interface ApiRebateRebateSendArcnBrnFaPostRequest {
    body?: RebateSendArcnBrnFaModel;
}

export interface ApiRebateRebateSendArcnInhFaPostRequest {
    body?: RebateSendArcnInhFaModel;
}

/**
 * 
 */
export class RebateApi extends runtime.BaseAPI {

    /**
     */
    async apiRebateRebateSendApcnFaB2bPostRaw(requestParameters: ApiRebateRebateSendApcnFaB2bPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StringBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Rebate/rebate_send_apcn_fa_b2b`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RebateSendApcnFaB2bModelToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StringBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiRebateRebateSendApcnFaB2bPost(requestParameters: ApiRebateRebateSendApcnFaB2bPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringBaseResponseModel> {
        const response = await this.apiRebateRebateSendApcnFaB2bPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRebateRebateSendApcnFaMnlPostRaw(requestParameters: ApiRebateRebateSendApcnFaMnlPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StringBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Rebate/rebate_send_apcn_fa_mnl`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RebateSendApcnFaB2bModelToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StringBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiRebateRebateSendApcnFaMnlPost(requestParameters: ApiRebateRebateSendApcnFaMnlPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringBaseResponseModel> {
        const response = await this.apiRebateRebateSendApcnFaMnlPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRebateRebateSendArcnBrnFaPostRaw(requestParameters: ApiRebateRebateSendArcnBrnFaPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StringBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Rebate/rebate_send_arcn_brn_fa`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RebateSendArcnBrnFaModelToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StringBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiRebateRebateSendArcnBrnFaPost(requestParameters: ApiRebateRebateSendArcnBrnFaPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringBaseResponseModel> {
        const response = await this.apiRebateRebateSendArcnBrnFaPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRebateRebateSendArcnInhFaPostRaw(requestParameters: ApiRebateRebateSendArcnInhFaPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StringBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Rebate/rebate_send_arcn_inh_fa`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RebateSendArcnInhFaModelToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StringBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiRebateRebateSendArcnInhFaPost(requestParameters: ApiRebateRebateSendArcnInhFaPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringBaseResponseModel> {
        const response = await this.apiRebateRebateSendArcnInhFaPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
