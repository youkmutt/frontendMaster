/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ConfigModelListBaseResponseModel,
} from '../models/index';

export interface ApiExternalConfigGetConfigGetRequest {
    configType?: string;
    appKey?: string;
}

/**
 * ExternalConfigApi - interface
 * 
 * @export
 * @interface ExternalConfigApiInterface
 */
export interface ExternalConfigApiInterface {
    /**
     * 
     * @param {string} [configType] 
     * @param {string} [appKey] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExternalConfigApiInterface
     */
    apiExternalConfigGetConfigGetRaw(requestParameters: ApiExternalConfigGetConfigGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfigModelListBaseResponseModel>>;

    /**
     */
    apiExternalConfigGetConfigGet(requestParameters: ApiExternalConfigGetConfigGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfigModelListBaseResponseModel>;

}

/**
 * 
 */
export class ExternalConfigApi extends runtime.BaseAPI implements ExternalConfigApiInterface {

    /**
     */
    async apiExternalConfigGetConfigGetRaw(requestParameters: ApiExternalConfigGetConfigGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfigModelListBaseResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['configType'] != null) {
            queryParameters['config_type'] = requestParameters['configType'];
        }

        if (requestParameters['appKey'] != null) {
            queryParameters['app_key'] = requestParameters['appKey'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/ExternalConfig/get-config`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiExternalConfigGetConfigGet(requestParameters: ApiExternalConfigGetConfigGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfigModelListBaseResponseModel> {
        const response = await this.apiExternalConfigGetConfigGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
