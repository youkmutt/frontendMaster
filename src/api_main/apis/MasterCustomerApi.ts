/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  MasterCustomerGetSearchModelBaseResponsePagination,
  MasterCustomerModelBaseResponseModel,
  MasterCustomerOwnerModel,
  MasterCustomerOwnerModelBaseResponseModel,
  MasterEmployeeModelBaseResponsePagination,
} from '../models/index';

export interface ApiMasterCustomerAddMasterCustomerOwnerPutRequest {
    body?: MasterCustomerOwnerModel;
}

export interface ApiMasterCustomerGetMasterCustomerByIdCustomerIdGetRequest {
    customerId: number;
}

export interface ApiMasterCustomerGetMasterCustomerListGetRequest {
    customerName?: string;
    customerCreditType?: any;
    salesOwner?: string;
    holdStatus?: boolean;
    startUpdateDate?: string;
    endUpdateDate?: string;
    startLastCalculateDate?: string;
    endLastCalculateDate?: string;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiMasterCustomerGetMasterEmployeeGetRequest {
    employeeName?: string;
    pageIndex?: number;
    pageSize?: number;
}

/**
 * MasterCustomerApi - interface
 * 
 * @export
 * @interface MasterCustomerApiInterface
 */
export interface MasterCustomerApiInterface {
    /**
     * 
     * @param {MasterCustomerOwnerModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MasterCustomerApiInterface
     */
    apiMasterCustomerAddMasterCustomerOwnerPutRaw(requestParameters: ApiMasterCustomerAddMasterCustomerOwnerPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerOwnerModelBaseResponseModel>>;

    /**
     */
    apiMasterCustomerAddMasterCustomerOwnerPut(requestParameters: ApiMasterCustomerAddMasterCustomerOwnerPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerOwnerModelBaseResponseModel>;

    /**
     * 
     * @param {number} customerId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MasterCustomerApiInterface
     */
    apiMasterCustomerGetMasterCustomerByIdCustomerIdGetRaw(requestParameters: ApiMasterCustomerGetMasterCustomerByIdCustomerIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerModelBaseResponseModel>>;

    /**
     */
    apiMasterCustomerGetMasterCustomerByIdCustomerIdGet(requestParameters: ApiMasterCustomerGetMasterCustomerByIdCustomerIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerModelBaseResponseModel>;

    /**
     * 
     * @param {string} [customerName] 
     * @param {any} [customerCreditType] 
     * @param {string} [salesOwner] 
     * @param {boolean} [holdStatus] 
     * @param {string} [startUpdateDate] 
     * @param {string} [endUpdateDate] 
     * @param {string} [startLastCalculateDate] 
     * @param {string} [endLastCalculateDate] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MasterCustomerApiInterface
     */
    apiMasterCustomerGetMasterCustomerListGetRaw(requestParameters: ApiMasterCustomerGetMasterCustomerListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGetSearchModelBaseResponsePagination>>;

    /**
     */
    apiMasterCustomerGetMasterCustomerListGet(requestParameters: ApiMasterCustomerGetMasterCustomerListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGetSearchModelBaseResponsePagination>;

    /**
     * 
     * @param {string} [employeeName] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MasterCustomerApiInterface
     */
    apiMasterCustomerGetMasterEmployeeGetRaw(requestParameters: ApiMasterCustomerGetMasterEmployeeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterEmployeeModelBaseResponsePagination>>;

    /**
     */
    apiMasterCustomerGetMasterEmployeeGet(requestParameters: ApiMasterCustomerGetMasterEmployeeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterEmployeeModelBaseResponsePagination>;

}

/**
 * 
 */
export class MasterCustomerApi extends runtime.BaseAPI implements MasterCustomerApiInterface {

    /**
     */
    async apiMasterCustomerAddMasterCustomerOwnerPutRaw(requestParameters: ApiMasterCustomerAddMasterCustomerOwnerPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerOwnerModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/MasterCustomer/add-master-customer-owner`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiMasterCustomerAddMasterCustomerOwnerPut(requestParameters: ApiMasterCustomerAddMasterCustomerOwnerPutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerOwnerModelBaseResponseModel> {
        const response = await this.apiMasterCustomerAddMasterCustomerOwnerPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiMasterCustomerGetMasterCustomerByIdCustomerIdGetRaw(requestParameters: ApiMasterCustomerGetMasterCustomerByIdCustomerIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerModelBaseResponseModel>> {
        if (requestParameters['customerId'] == null) {
            throw new runtime.RequiredError(
                'customerId',
                'Required parameter "customerId" was null or undefined when calling apiMasterCustomerGetMasterCustomerByIdCustomerIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/MasterCustomer/get-master-customer-by-id/{customerId}`.replace(`{${"customerId"}}`, encodeURIComponent(String(requestParameters['customerId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiMasterCustomerGetMasterCustomerByIdCustomerIdGet(requestParameters: ApiMasterCustomerGetMasterCustomerByIdCustomerIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerModelBaseResponseModel> {
        const response = await this.apiMasterCustomerGetMasterCustomerByIdCustomerIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiMasterCustomerGetMasterCustomerListGetRaw(requestParameters: ApiMasterCustomerGetMasterCustomerListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGetSearchModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['customerName'] != null) {
            queryParameters['customer_name'] = requestParameters['customerName'];
        }

        if (requestParameters['customerCreditType'] != null) {
            queryParameters['customer_credit_type'] = requestParameters['customerCreditType'];
        }

        if (requestParameters['salesOwner'] != null) {
            queryParameters['sales_owner'] = requestParameters['salesOwner'];
        }

        if (requestParameters['holdStatus'] != null) {
            queryParameters['hold_status'] = requestParameters['holdStatus'];
        }

        if (requestParameters['startUpdateDate'] != null) {
            queryParameters['start_update_date'] = requestParameters['startUpdateDate'];
        }

        if (requestParameters['endUpdateDate'] != null) {
            queryParameters['end_update_date'] = requestParameters['endUpdateDate'];
        }

        if (requestParameters['startLastCalculateDate'] != null) {
            queryParameters['start_last_calculate_date'] = requestParameters['startLastCalculateDate'];
        }

        if (requestParameters['endLastCalculateDate'] != null) {
            queryParameters['end_last_calculate_date'] = requestParameters['endLastCalculateDate'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/MasterCustomer/get-master-customer-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiMasterCustomerGetMasterCustomerListGet(requestParameters: ApiMasterCustomerGetMasterCustomerListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGetSearchModelBaseResponsePagination> {
        const response = await this.apiMasterCustomerGetMasterCustomerListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiMasterCustomerGetMasterEmployeeGetRaw(requestParameters: ApiMasterCustomerGetMasterEmployeeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterEmployeeModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['employeeName'] != null) {
            queryParameters['employee_name'] = requestParameters['employeeName'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/MasterCustomer/get-master-employee`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiMasterCustomerGetMasterEmployeeGet(requestParameters: ApiMasterCustomerGetMasterEmployeeGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterEmployeeModelBaseResponsePagination> {
        const response = await this.apiMasterCustomerGetMasterEmployeeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
