/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BooleanBaseResponseModel,
  RequestUnholdGetSearchResponseModel,
  RequestUnholdGroupModel,
  RequestUnholdGroupModelListBaseResponseModel,
  RequestUnholdSOGetModelBaseResponsePagination,
  RequestUnholdSearchGetSOModelBaseResponsePagination,
} from '../models/index';

export interface ApiRequestUnholdCreateRequestUnholdSoPostRequest {
    body?: Omit<RequestUnholdGroupModel, 'req_status_name'>;
}

export interface ApiRequestUnholdDeleteRequestUnholdSoPatchRequest {
    reqUnholdId?: number;
}

export interface ApiRequestUnholdGetRequestUnholdSoDetailByIdGetRequest {
    pageIndex?: number;
    pageSize?: number;
    reqUnholdId?: number;
}

export interface ApiRequestUnholdGetRequestUnholdSoListGetRequest {
    customerName?: string;
    reqStatus?: any;
    startReqDate?: string;
    endReqDate?: string;
    currentStepId?: number;
    isApprove?: boolean;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiRequestUnholdGetUnholdSoListGetRequest {
    customerName?: string;
    soNo?: string;
    pageIndex?: number;
    pageSize?: number;
    customerId?: number;
}

export interface ApiRequestUnholdUpdateRequestUnholdSoPutRequest {
    body?: Array<RequestUnholdGroupModel>;
}

/**
 * RequestUnholdApi - interface
 * 
 * @export
 * @interface RequestUnholdApiInterface
 */
export interface RequestUnholdApiInterface {
    /**
     * 
     * @param {RequestUnholdGroupModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestUnholdApiInterface
     */
    apiRequestUnholdCreateRequestUnholdSoPostRaw(requestParameters: ApiRequestUnholdCreateRequestUnholdSoPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdGroupModelListBaseResponseModel>>;

    /**
     */
    apiRequestUnholdCreateRequestUnholdSoPost(requestParameters: ApiRequestUnholdCreateRequestUnholdSoPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdGroupModelListBaseResponseModel>;

    /**
     * 
     * @param {number} [reqUnholdId] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestUnholdApiInterface
     */
    apiRequestUnholdDeleteRequestUnholdSoPatchRaw(requestParameters: ApiRequestUnholdDeleteRequestUnholdSoPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanBaseResponseModel>>;

    /**
     */
    apiRequestUnholdDeleteRequestUnholdSoPatch(requestParameters: ApiRequestUnholdDeleteRequestUnholdSoPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanBaseResponseModel>;

    /**
     * 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {number} [reqUnholdId] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestUnholdApiInterface
     */
    apiRequestUnholdGetRequestUnholdSoDetailByIdGetRaw(requestParameters: ApiRequestUnholdGetRequestUnholdSoDetailByIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdSOGetModelBaseResponsePagination>>;

    /**
     */
    apiRequestUnholdGetRequestUnholdSoDetailByIdGet(requestParameters: ApiRequestUnholdGetRequestUnholdSoDetailByIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdSOGetModelBaseResponsePagination>;

    /**
     * 
     * @param {string} [customerName] 
     * @param {any} [reqStatus] 
     * @param {string} [startReqDate] 
     * @param {string} [endReqDate] 
     * @param {number} [currentStepId] 
     * @param {boolean} [isApprove] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestUnholdApiInterface
     */
    apiRequestUnholdGetRequestUnholdSoListGetRaw(requestParameters: ApiRequestUnholdGetRequestUnholdSoListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdGetSearchResponseModel>>;

    /**
     */
    apiRequestUnholdGetRequestUnholdSoListGet(requestParameters: ApiRequestUnholdGetRequestUnholdSoListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdGetSearchResponseModel>;

    /**
     * 
     * @param {string} [customerName] 
     * @param {string} [soNo] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {number} [customerId] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestUnholdApiInterface
     */
    apiRequestUnholdGetUnholdSoListGetRaw(requestParameters: ApiRequestUnholdGetUnholdSoListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdSearchGetSOModelBaseResponsePagination>>;

    /**
     */
    apiRequestUnholdGetUnholdSoListGet(requestParameters: ApiRequestUnholdGetUnholdSoListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdSearchGetSOModelBaseResponsePagination>;

    /**
     * 
     * @param {Array<RequestUnholdGroupModel>} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestUnholdApiInterface
     */
    apiRequestUnholdUpdateRequestUnholdSoPutRaw(requestParameters: ApiRequestUnholdUpdateRequestUnholdSoPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdGroupModelListBaseResponseModel>>;

    /**
     */
    apiRequestUnholdUpdateRequestUnholdSoPut(requestParameters: ApiRequestUnholdUpdateRequestUnholdSoPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdGroupModelListBaseResponseModel>;

}

/**
 * 
 */
export class RequestUnholdApi extends runtime.BaseAPI implements RequestUnholdApiInterface {

    /**
     */
    async apiRequestUnholdCreateRequestUnholdSoPostRaw(requestParameters: ApiRequestUnholdCreateRequestUnholdSoPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdGroupModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/RequestUnhold/create-request-unhold-so`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRequestUnholdCreateRequestUnholdSoPost(requestParameters: ApiRequestUnholdCreateRequestUnholdSoPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdGroupModelListBaseResponseModel> {
        const response = await this.apiRequestUnholdCreateRequestUnholdSoPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRequestUnholdDeleteRequestUnholdSoPatchRaw(requestParameters: ApiRequestUnholdDeleteRequestUnholdSoPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanBaseResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['reqUnholdId'] != null) {
            queryParameters['reqUnholdId'] = requestParameters['reqUnholdId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/RequestUnhold/delete-request-unhold-so`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRequestUnholdDeleteRequestUnholdSoPatch(requestParameters: ApiRequestUnholdDeleteRequestUnholdSoPatchRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanBaseResponseModel> {
        const response = await this.apiRequestUnholdDeleteRequestUnholdSoPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRequestUnholdGetRequestUnholdSoDetailByIdGetRaw(requestParameters: ApiRequestUnholdGetRequestUnholdSoDetailByIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdSOGetModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        if (requestParameters['reqUnholdId'] != null) {
            queryParameters['reqUnholdId'] = requestParameters['reqUnholdId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/RequestUnhold/get-request-unhold-so-detail-by-id`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRequestUnholdGetRequestUnholdSoDetailByIdGet(requestParameters: ApiRequestUnholdGetRequestUnholdSoDetailByIdGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdSOGetModelBaseResponsePagination> {
        const response = await this.apiRequestUnholdGetRequestUnholdSoDetailByIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRequestUnholdGetRequestUnholdSoListGetRaw(requestParameters: ApiRequestUnholdGetRequestUnholdSoListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdGetSearchResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['customerName'] != null) {
            queryParameters['customer_name'] = requestParameters['customerName'];
        }

        if (requestParameters['reqStatus'] != null) {
            queryParameters['req_status'] = requestParameters['reqStatus'];
        }

        if (requestParameters['startReqDate'] != null) {
            queryParameters['start_req_date'] = requestParameters['startReqDate'];
        }

        if (requestParameters['endReqDate'] != null) {
            queryParameters['end_req_date'] = requestParameters['endReqDate'];
        }

        if (requestParameters['currentStepId'] != null) {
            queryParameters['current_step_id'] = requestParameters['currentStepId'];
        }

        if (requestParameters['isApprove'] != null) {
            queryParameters['is_approve'] = requestParameters['isApprove'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/RequestUnhold/get-request-unhold-so-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRequestUnholdGetRequestUnholdSoListGet(requestParameters: ApiRequestUnholdGetRequestUnholdSoListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdGetSearchResponseModel> {
        const response = await this.apiRequestUnholdGetRequestUnholdSoListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRequestUnholdGetUnholdSoListGetRaw(requestParameters: ApiRequestUnholdGetUnholdSoListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdSearchGetSOModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['customerName'] != null) {
            queryParameters['customer_name'] = requestParameters['customerName'];
        }

        if (requestParameters['soNo'] != null) {
            queryParameters['so_no'] = requestParameters['soNo'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        if (requestParameters['customerId'] != null) {
            queryParameters['customerId'] = requestParameters['customerId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/RequestUnhold/get-unhold-so-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRequestUnholdGetUnholdSoListGet(requestParameters: ApiRequestUnholdGetUnholdSoListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdSearchGetSOModelBaseResponsePagination> {
        const response = await this.apiRequestUnholdGetUnholdSoListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRequestUnholdUpdateRequestUnholdSoPutRaw(requestParameters: ApiRequestUnholdUpdateRequestUnholdSoPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestUnholdGroupModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/RequestUnhold/update-request-unhold-so`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRequestUnholdUpdateRequestUnholdSoPut(requestParameters: ApiRequestUnholdUpdateRequestUnholdSoPutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestUnholdGroupModelListBaseResponseModel> {
        const response = await this.apiRequestUnholdUpdateRequestUnholdSoPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
