/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ReportBankReconcileModelBaseResponseModel,
  RequestReportBankReconcileModel,
} from '../models/index';

export interface ApiReportPrintReportBankReconcilePostRequest {
    body?: RequestReportBankReconcileModel;
}

export interface ApiReportReportBankReconcileGetRequest {
    endDate?: string;
    bankAccountId?: number;
    unit?: number;
    type?: number;
    unitName?: string;
}

/**
 * ReportApi - interface
 * 
 * @export
 * @interface ReportApiInterface
 */
export interface ReportApiInterface {
    /**
     * 
     * @param {RequestReportBankReconcileModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportApiInterface
     */
    apiReportPrintReportBankReconcilePostRaw(requestParameters: ApiReportPrintReportBankReconcilePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     */
    apiReportPrintReportBankReconcilePost(requestParameters: ApiReportPrintReportBankReconcilePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @param {string} [endDate] 
     * @param {number} [bankAccountId] 
     * @param {number} [unit] 
     * @param {number} [type] 
     * @param {string} [unitName] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReportApiInterface
     */
    apiReportReportBankReconcileGetRaw(requestParameters: ApiReportReportBankReconcileGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReportBankReconcileModelBaseResponseModel>>;

    /**
     */
    apiReportReportBankReconcileGet(requestParameters: ApiReportReportBankReconcileGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReportBankReconcileModelBaseResponseModel>;

}

/**
 * 
 */
export class ReportApi extends runtime.BaseAPI implements ReportApiInterface {

    /**
     */
    async apiReportPrintReportBankReconcilePostRaw(requestParameters: ApiReportPrintReportBankReconcilePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/Report/print-report-bank-reconcile`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiReportPrintReportBankReconcilePost(requestParameters: ApiReportPrintReportBankReconcilePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiReportPrintReportBankReconcilePostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiReportReportBankReconcileGetRaw(requestParameters: ApiReportReportBankReconcileGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReportBankReconcileModelBaseResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['endDate'] != null) {
            queryParameters['end_date'] = requestParameters['endDate'];
        }

        if (requestParameters['bankAccountId'] != null) {
            queryParameters['bank_account_id'] = requestParameters['bankAccountId'];
        }

        if (requestParameters['unit'] != null) {
            queryParameters['unit'] = requestParameters['unit'];
        }

        if (requestParameters['type'] != null) {
            queryParameters['type'] = requestParameters['type'];
        }

        if (requestParameters['unitName'] != null) {
            queryParameters['unit_name'] = requestParameters['unitName'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/Report/report-bank-reconcile`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiReportReportBankReconcileGet(requestParameters: ApiReportReportBankReconcileGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReportBankReconcileModelBaseResponseModel> {
        const response = await this.apiReportReportBankReconcileGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
