/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DropdownEmployeeModelBaseResponsePagination,
  DropdownModelListBaseResponseModel,
  DropdownRoleModelListBaseResponseModel,
  DropdownSubDistrictModelListBaseResponseModel,
  DropdownTreeModelListBaseResponseModel,
} from '../models/index';
import {
    DropdownEmployeeModelBaseResponsePaginationFromJSON,
    DropdownEmployeeModelBaseResponsePaginationToJSON,
    DropdownModelListBaseResponseModelFromJSON,
    DropdownModelListBaseResponseModelToJSON,
    DropdownRoleModelListBaseResponseModelFromJSON,
    DropdownRoleModelListBaseResponseModelToJSON,
    DropdownSubDistrictModelListBaseResponseModelFromJSON,
    DropdownSubDistrictModelListBaseResponseModelToJSON,
    DropdownTreeModelListBaseResponseModelFromJSON,
    DropdownTreeModelListBaseResponseModelToJSON,
} from '../models/index';

export interface ApiDropdownDdlDistrictGetRequest {
    provinceId?: number;
}

export interface ApiDropdownDdlEmployeeAvaliableGetRequest {
    employeeName?: string;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiDropdownDdlFileTypeGetRequest {
    mappingType?: any;
}

export interface ApiDropdownDdlSubdistrictGetRequest {
    districtId?: number;
}

/**
 * 
 */
export class DropdownApi extends runtime.BaseAPI {

    /**
     */
    async apiDropdownDdlAddressTypeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-address-type`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlAddressTypeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlAddressTypeGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlBankAccountGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-bank-account`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlBankAccountGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlBankAccountGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlBankGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-bank`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlBankGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlBankGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlChartAccountGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-chart-account`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlChartAccountGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlChartAccountGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlCompanyPayrollGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-company-payroll`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlCompanyPayrollGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlCompanyPayrollGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlCurrencyGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-currency`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlCurrencyGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlCurrencyGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlCustomerCreditTypeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-customer-credit-type`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlCustomerCreditTypeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlCustomerCreditTypeGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlCustomerRegisterStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-customer-register-status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlCustomerRegisterStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlCustomerRegisterStatusGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlDepositGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-deposit`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlDepositGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlDepositGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlDistrictGetRaw(requestParameters: ApiDropdownDdlDistrictGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['provinceId'] != null) {
            queryParameters['provinceId'] = requestParameters['provinceId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-district`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlDistrictGet(requestParameters: ApiDropdownDdlDistrictGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlDistrictGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlEmployeeAvaliableGetRaw(requestParameters: ApiDropdownDdlEmployeeAvaliableGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownEmployeeModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['employeeName'] != null) {
            queryParameters['employee_name'] = requestParameters['employeeName'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-employee-avaliable`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownEmployeeModelBaseResponsePaginationFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlEmployeeAvaliableGet(requestParameters: ApiDropdownDdlEmployeeAvaliableGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownEmployeeModelBaseResponsePagination> {
        const response = await this.apiDropdownDdlEmployeeAvaliableGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlFileTypeGetRaw(requestParameters: ApiDropdownDdlFileTypeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['mappingType'] != null) {
            queryParameters['mappingType'] = requestParameters['mappingType'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-file-type`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlFileTypeGet(requestParameters: ApiDropdownDdlFileTypeGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlFileTypeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlOrganizeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownTreeModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-organize`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownTreeModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlOrganizeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownTreeModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlOrganizeGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlPersonTypeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-person-type`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlPersonTypeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlPersonTypeGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlProjectGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-project`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlProjectGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlProjectGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlProvinceGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-province`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlProvinceGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlProvinceGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlRequestUnholdStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-request-unhold-status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlRequestUnholdStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlRequestUnholdStatusGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlRequestUpdateCustomerStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-request-update-customer-status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlRequestUpdateCustomerStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlRequestUpdateCustomerStatusGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlRequestUpdateCustomerTypeStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-request-update-customer-type-status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlRequestUpdateCustomerTypeStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlRequestUpdateCustomerTypeStatusGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlRoleGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownRoleModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-role`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownRoleModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlRoleGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownRoleModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlRoleGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlSopPaymentRoundGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-sop-payment-round`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlSopPaymentRoundGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlSopPaymentRoundGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlSubdistrictGetRaw(requestParameters: ApiDropdownDdlSubdistrictGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownSubDistrictModelListBaseResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['districtId'] != null) {
            queryParameters['districtId'] = requestParameters['districtId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-subdistrict`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownSubDistrictModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlSubdistrictGet(requestParameters: ApiDropdownDdlSubdistrictGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownSubDistrictModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlSubdistrictGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlTitleGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-title`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlTitleGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlTitleGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiDropdownDdlUserGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DropdownModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Dropdown/ddl-user`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DropdownModelListBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiDropdownDdlUserGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DropdownModelListBaseResponseModel> {
        const response = await this.apiDropdownDdlUserGetRaw(initOverrides);
        return await response.value();
    }

}
