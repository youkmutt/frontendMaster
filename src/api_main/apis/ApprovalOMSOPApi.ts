/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApprovalOMSOPDetailModel,
  ApprovalOMSOPDetailModelBaseResponseModel,
  ApprovalOMSOPResponseModel,
} from '../models/index';
import {
    ApprovalOMSOPDetailModelFromJSON,
    ApprovalOMSOPDetailModelToJSON,
    ApprovalOMSOPDetailModelBaseResponseModelFromJSON,
    ApprovalOMSOPDetailModelBaseResponseModelToJSON,
    ApprovalOMSOPResponseModelFromJSON,
    ApprovalOMSOPResponseModelToJSON,
} from '../models/index';

export interface ApiApprovalOMSOPListGetRequest {
    round?: string;
    projectCode?: string;
    sopName?: string;
    invoiceNo?: string;
    refType?: number;
    currentStepId?: number;
    paymentType?: number;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiApprovalOMSOPOmPaymentDetailIdGetRequest {
    id: number;
}

export interface ApiApprovalOMSOPUpdatePostRequest {
    body?: ApprovalOMSOPDetailModel;
}

/**
 * 
 */
export class ApprovalOMSOPApi extends runtime.BaseAPI {

    /**
     */
    async apiApprovalOMSOPListGetRaw(requestParameters: ApiApprovalOMSOPListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalOMSOPResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['round'] != null) {
            queryParameters['round'] = requestParameters['round'];
        }

        if (requestParameters['projectCode'] != null) {
            queryParameters['project_code'] = requestParameters['projectCode'];
        }

        if (requestParameters['sopName'] != null) {
            queryParameters['sop_name'] = requestParameters['sopName'];
        }

        if (requestParameters['invoiceNo'] != null) {
            queryParameters['invoice_no'] = requestParameters['invoiceNo'];
        }

        if (requestParameters['refType'] != null) {
            queryParameters['ref_type'] = requestParameters['refType'];
        }

        if (requestParameters['currentStepId'] != null) {
            queryParameters['current_step_id'] = requestParameters['currentStepId'];
        }

        if (requestParameters['paymentType'] != null) {
            queryParameters['payment_type'] = requestParameters['paymentType'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalOMSOP/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalOMSOPResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalOMSOPListGet(requestParameters: ApiApprovalOMSOPListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalOMSOPResponseModel> {
        const response = await this.apiApprovalOMSOPListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiApprovalOMSOPOmPaymentDetailIdGetRaw(requestParameters: ApiApprovalOMSOPOmPaymentDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalOMSOPDetailModelBaseResponseModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiApprovalOMSOPOmPaymentDetailIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalOMSOP/om-payment-detail/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalOMSOPDetailModelBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalOMSOPOmPaymentDetailIdGet(requestParameters: ApiApprovalOMSOPOmPaymentDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalOMSOPDetailModelBaseResponseModel> {
        const response = await this.apiApprovalOMSOPOmPaymentDetailIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiApprovalOMSOPUpdatePostRaw(requestParameters: ApiApprovalOMSOPUpdatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalOMSOPDetailModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalOMSOP/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApprovalOMSOPDetailModelToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalOMSOPDetailModelBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalOMSOPUpdatePost(requestParameters: ApiApprovalOMSOPUpdatePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalOMSOPDetailModelBaseResponseModel> {
        const response = await this.apiApprovalOMSOPUpdatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
