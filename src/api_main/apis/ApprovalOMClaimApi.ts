/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApprovalARCNClaimDetailModel,
  ApprovalARCNClaimDetailModelBaseResponseModel,
  ApprovalARCNClaimResponseModel,
} from '../models/index';
import {
    ApprovalARCNClaimDetailModelFromJSON,
    ApprovalARCNClaimDetailModelToJSON,
    ApprovalARCNClaimDetailModelBaseResponseModelFromJSON,
    ApprovalARCNClaimDetailModelBaseResponseModelToJSON,
    ApprovalARCNClaimResponseModelFromJSON,
    ApprovalARCNClaimResponseModelToJSON,
} from '../models/index';

export interface ApiApprovalOMClaimDetailIdGetRequest {
    id: number;
}

export interface ApiApprovalOMClaimListGetRequest {
    claimCnNo?: string;
    customerName?: string;
    claimCnStartDate?: Date;
    claimCnEndDate?: Date;
    claimStatus?: any;
    claimType?: number;
    currentStepId?: number;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiApprovalOMClaimUpdatePostRequest {
    body?: ApprovalARCNClaimDetailModel;
}

/**
 * 
 */
export class ApprovalOMClaimApi extends runtime.BaseAPI {

    /**
     */
    async apiApprovalOMClaimDetailIdGetRaw(requestParameters: ApiApprovalOMClaimDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalARCNClaimDetailModelBaseResponseModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiApprovalOMClaimDetailIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalOMClaim/detail/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalARCNClaimDetailModelBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalOMClaimDetailIdGet(requestParameters: ApiApprovalOMClaimDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalARCNClaimDetailModelBaseResponseModel> {
        const response = await this.apiApprovalOMClaimDetailIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiApprovalOMClaimListGetRaw(requestParameters: ApiApprovalOMClaimListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalARCNClaimResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['claimCnNo'] != null) {
            queryParameters['claim_cn_no'] = requestParameters['claimCnNo'];
        }

        if (requestParameters['customerName'] != null) {
            queryParameters['customer_name'] = requestParameters['customerName'];
        }

        if (requestParameters['claimCnStartDate'] != null) {
            queryParameters['claim_cn_start_date'] = (requestParameters['claimCnStartDate'] as any).toISOString();
        }

        if (requestParameters['claimCnEndDate'] != null) {
            queryParameters['claim_cn_end_date'] = (requestParameters['claimCnEndDate'] as any).toISOString();
        }

        if (requestParameters['claimStatus'] != null) {
            queryParameters['claim_status'] = requestParameters['claimStatus'];
        }

        if (requestParameters['claimType'] != null) {
            queryParameters['claimType'] = requestParameters['claimType'];
        }

        if (requestParameters['currentStepId'] != null) {
            queryParameters['current_step_id'] = requestParameters['currentStepId'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalOMClaim/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalARCNClaimResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalOMClaimListGet(requestParameters: ApiApprovalOMClaimListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalARCNClaimResponseModel> {
        const response = await this.apiApprovalOMClaimListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiApprovalOMClaimUpdatePostRaw(requestParameters: ApiApprovalOMClaimUpdatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalARCNClaimDetailModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalOMClaim/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApprovalARCNClaimDetailModelToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalARCNClaimDetailModelBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalOMClaimUpdatePost(requestParameters: ApiApprovalOMClaimUpdatePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalARCNClaimDetailModelBaseResponseModel> {
        const response = await this.apiApprovalOMClaimUpdatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
