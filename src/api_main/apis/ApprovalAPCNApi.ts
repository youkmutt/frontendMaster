/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApprovalAPCNDetailModel,
  ApprovalAPCNDetailModelBaseResponseModel,
  ApprovalAPCNResponseModel,
} from '../models/index';
import {
    ApprovalAPCNDetailModelFromJSON,
    ApprovalAPCNDetailModelToJSON,
    ApprovalAPCNDetailModelBaseResponseModelFromJSON,
    ApprovalAPCNDetailModelBaseResponseModelToJSON,
    ApprovalAPCNResponseModelFromJSON,
    ApprovalAPCNResponseModelToJSON,
} from '../models/index';

export interface ApiApprovalAPCNDetailIdGetRequest {
    id: number;
}

export interface ApiApprovalAPCNListGetRequest {
    rebateCode?: string;
    supplierCode?: string;
    brandId?: number;
    startDate?: Date;
    endDate?: Date;
    currentStepId?: number;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiApprovalAPCNUpdatePostRequest {
    body?: ApprovalAPCNDetailModel;
}

/**
 * 
 */
export class ApprovalAPCNApi extends runtime.BaseAPI {

    /**
     */
    async apiApprovalAPCNDetailIdGetRaw(requestParameters: ApiApprovalAPCNDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalAPCNDetailModelBaseResponseModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiApprovalAPCNDetailIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalAPCN/detail/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalAPCNDetailModelBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalAPCNDetailIdGet(requestParameters: ApiApprovalAPCNDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalAPCNDetailModelBaseResponseModel> {
        const response = await this.apiApprovalAPCNDetailIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiApprovalAPCNListGetRaw(requestParameters: ApiApprovalAPCNListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalAPCNResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['rebateCode'] != null) {
            queryParameters['rebate_code'] = requestParameters['rebateCode'];
        }

        if (requestParameters['supplierCode'] != null) {
            queryParameters['supplier_code'] = requestParameters['supplierCode'];
        }

        if (requestParameters['brandId'] != null) {
            queryParameters['brand_id'] = requestParameters['brandId'];
        }

        if (requestParameters['startDate'] != null) {
            queryParameters['start_date'] = (requestParameters['startDate'] as any).toISOString();
        }

        if (requestParameters['endDate'] != null) {
            queryParameters['end_date'] = (requestParameters['endDate'] as any).toISOString();
        }

        if (requestParameters['currentStepId'] != null) {
            queryParameters['current_step_id'] = requestParameters['currentStepId'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalAPCN/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalAPCNResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalAPCNListGet(requestParameters: ApiApprovalAPCNListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalAPCNResponseModel> {
        const response = await this.apiApprovalAPCNListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiApprovalAPCNUpdatePostRaw(requestParameters: ApiApprovalAPCNUpdatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApprovalAPCNDetailModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ApprovalAPCN/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApprovalAPCNDetailModelToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApprovalAPCNDetailModelBaseResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiApprovalAPCNUpdatePost(requestParameters: ApiApprovalAPCNUpdatePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApprovalAPCNDetailModelBaseResponseModel> {
        const response = await this.apiApprovalAPCNUpdatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
