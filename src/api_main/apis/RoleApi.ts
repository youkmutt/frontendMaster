/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BooleanBaseResponseModel,
  RoleRequestModel,
  RoleRequestModelBaseResponseModel,
  RoleResponseModelBaseResponseModel,
  RoleResponseModelBaseResponsePagination,
  RoleResponseModelListBaseResponseModel,
} from '../models/index';

export interface ApiRoleDeleteRolePostRequest {
    id?: number;
}

export interface ApiRoleRoleAllListGetRequest {
    roleName?: string;
    activeFlag?: boolean;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiRoleRoleDetailIdGetRequest {
    id: number;
}

export interface ApiRoleUpdateRolePostRequest {
    body?: RoleRequestModel;
}

/**
 * RoleApi - interface
 * 
 * @export
 * @interface RoleApiInterface
 */
export interface RoleApiInterface {
    /**
     * 
     * @param {number} [id] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoleApiInterface
     */
    apiRoleDeleteRolePostRaw(requestParameters: ApiRoleDeleteRolePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanBaseResponseModel>>;

    /**
     */
    apiRoleDeleteRolePost(requestParameters: ApiRoleDeleteRolePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanBaseResponseModel>;

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoleApiInterface
     */
    apiRoleRoleAllGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleResponseModelListBaseResponseModel>>;

    /**
     */
    apiRoleRoleAllGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleResponseModelListBaseResponseModel>;

    /**
     * 
     * @param {string} [roleName] 
     * @param {boolean} [activeFlag] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoleApiInterface
     */
    apiRoleRoleAllListGetRaw(requestParameters: ApiRoleRoleAllListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleResponseModelBaseResponsePagination>>;

    /**
     */
    apiRoleRoleAllListGet(requestParameters: ApiRoleRoleAllListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleResponseModelBaseResponsePagination>;

    /**
     * 
     * @param {number} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoleApiInterface
     */
    apiRoleRoleDetailIdGetRaw(requestParameters: ApiRoleRoleDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleResponseModelBaseResponseModel>>;

    /**
     */
    apiRoleRoleDetailIdGet(requestParameters: ApiRoleRoleDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleResponseModelBaseResponseModel>;

    /**
     * 
     * @param {RoleRequestModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoleApiInterface
     */
    apiRoleUpdateRolePostRaw(requestParameters: ApiRoleUpdateRolePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleRequestModelBaseResponseModel>>;

    /**
     */
    apiRoleUpdateRolePost(requestParameters: ApiRoleUpdateRolePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleRequestModelBaseResponseModel>;

}

/**
 * 
 */
export class RoleApi extends runtime.BaseAPI implements RoleApiInterface {

    /**
     */
    async apiRoleDeleteRolePostRaw(requestParameters: ApiRoleDeleteRolePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanBaseResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters['id'] != null) {
            queryParameters['id'] = requestParameters['id'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/Role/delete-role`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRoleDeleteRolePost(requestParameters: ApiRoleDeleteRolePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanBaseResponseModel> {
        const response = await this.apiRoleDeleteRolePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRoleRoleAllGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleResponseModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/Role/role-all`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRoleRoleAllGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleResponseModelListBaseResponseModel> {
        const response = await this.apiRoleRoleAllGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRoleRoleAllListGetRaw(requestParameters: ApiRoleRoleAllListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleResponseModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['roleName'] != null) {
            queryParameters['role_name'] = requestParameters['roleName'];
        }

        if (requestParameters['activeFlag'] != null) {
            queryParameters['active_flag'] = requestParameters['activeFlag'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/Role/role-all-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRoleRoleAllListGet(requestParameters: ApiRoleRoleAllListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleResponseModelBaseResponsePagination> {
        const response = await this.apiRoleRoleAllListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRoleRoleDetailIdGetRaw(requestParameters: ApiRoleRoleDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleResponseModelBaseResponseModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiRoleRoleDetailIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/Role/role-detail/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRoleRoleDetailIdGet(requestParameters: ApiRoleRoleDetailIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleResponseModelBaseResponseModel> {
        const response = await this.apiRoleRoleDetailIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRoleUpdateRolePostRaw(requestParameters: ApiRoleUpdateRolePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleRequestModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/Role/update-role`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiRoleUpdateRolePost(requestParameters: ApiRoleUpdateRolePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleRequestModelBaseResponseModel> {
        const response = await this.apiRoleUpdateRolePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
