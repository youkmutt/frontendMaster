/* tslint:disable */
/* eslint-disable */
/**
 * BaseWebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ConfigEvaluationTopicGetSearchModelBaseResponsePagination,
  DuplicateConfigEvaluationTopic,
  MasterCustomerCreditScoreGetSearchModelBaseResponsePagination,
  MasterCustomerCreditScoreModel,
  MasterCustomerCreditScoreModelBaseResponseModel,
  MasterCustomerEvaluationModel,
  MasterCustomerEvaluationModelBaseResponseModel,
  MasterCustomerGradeGetSearchModelBaseResponsePagination,
  MasterCustomerGradeModel,
  MasterCustomerGradeModelBaseResponseModel,
  SysCustomerEvaluationConfigGetSearchModelBaseResponsePagination,
  SysCustomerEvaluationConfigModelListBaseResponseModel,
  SysEvaluationConfigId,
  UpdateActiveFlagMasterCustomerCreditScoreModel,
  UpdateActiveFlagMasterCustomerCreditScoreModelBaseResponseModel,
  UpdateActiveFlagMasterCustomerGradeModel,
  UpdateActiveFlagMasterCustomerGradeModelBaseResponseModel,
  UpdateCustomerEvaluationActiveFlag,
  UpdateCustomerEvaluationActiveFlagBaseResponseModel,
} from '../models/index';

export interface ApiConfigCustomerEvaluationCreateConfigEvaluationTopicPostRequest {
    body?: Omit<MasterCustomerEvaluationModel, 'evaluation_type_name'>;
}

export interface ApiConfigCustomerEvaluationCreateMasterCustomerCreditScorePostRequest {
    body?: MasterCustomerCreditScoreModel;
}

export interface ApiConfigCustomerEvaluationCreateMasterCustomerGradePostRequest {
    body?: MasterCustomerGradeModel;
}

export interface ApiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPostRequest {
    body?: DuplicateConfigEvaluationTopic;
}

export interface ApiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGetRequest {
    id: number;
}

export interface ApiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGetRequest {
    evaluationName?: string;
    dateStart?: string;
    dateEnd?: string;
    activeFlag?: boolean;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGetRequest {
    evaluationName?: string;
    dateStart?: string;
    dateEnd?: string;
    activeFlag?: boolean;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGetRequest {
    id: number;
}

export interface ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGetRequest {
    creditScoreName?: string;
    updateDateStart?: string;
    updateDateEnd?: string;
    activeFlag?: boolean;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGetRequest {
    id: number;
}

export interface ApiConfigCustomerEvaluationGetMasterCustomerGradeListGetRequest {
    gradeName?: string;
    updateDateStart?: string;
    updateDateEnd?: string;
    activeFlag?: boolean;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPostRequest {
    body?: SysEvaluationConfigId;
}

export interface ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGetRequest {
    evaluationName?: string;
    pageIndex?: number;
    pageSize?: number;
}

export interface ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatchRequest {
    body?: UpdateCustomerEvaluationActiveFlag;
}

export interface ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicPutRequest {
    body?: Omit<MasterCustomerEvaluationModel, 'evaluation_type_name'>;
}

export interface ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatchRequest {
    body?: UpdateActiveFlagMasterCustomerCreditScoreModel;
}

export interface ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePutRequest {
    body?: MasterCustomerCreditScoreModel;
}

export interface ApiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatchRequest {
    body?: UpdateActiveFlagMasterCustomerGradeModel;
}

export interface ApiConfigCustomerEvaluationUpdateMasterCustomerGradePutRequest {
    body?: MasterCustomerGradeModel;
}

/**
 * ConfigCustomerEvaluationApi - interface
 * 
 * @export
 * @interface ConfigCustomerEvaluationApiInterface
 */
export interface ConfigCustomerEvaluationApiInterface {
    /**
     * 
     * @param {MasterCustomerEvaluationModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationCreateConfigEvaluationTopicPostRaw(requestParameters: ApiConfigCustomerEvaluationCreateConfigEvaluationTopicPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerEvaluationModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationCreateConfigEvaluationTopicPost(requestParameters: ApiConfigCustomerEvaluationCreateConfigEvaluationTopicPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerEvaluationModelBaseResponseModel>;

    /**
     * 
     * @param {MasterCustomerCreditScoreModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationCreateMasterCustomerCreditScorePostRaw(requestParameters: ApiConfigCustomerEvaluationCreateMasterCustomerCreditScorePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerCreditScoreModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationCreateMasterCustomerCreditScorePost(requestParameters: ApiConfigCustomerEvaluationCreateMasterCustomerCreditScorePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerCreditScoreModelBaseResponseModel>;

    /**
     * 
     * @param {MasterCustomerGradeModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationCreateMasterCustomerGradePostRaw(requestParameters: ApiConfigCustomerEvaluationCreateMasterCustomerGradePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGradeModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationCreateMasterCustomerGradePost(requestParameters: ApiConfigCustomerEvaluationCreateMasterCustomerGradePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGradeModelBaseResponseModel>;

    /**
     * 
     * @param {DuplicateConfigEvaluationTopic} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPostRaw(requestParameters: ApiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerEvaluationModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPost(requestParameters: ApiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerEvaluationModelBaseResponseModel>;

    /**
     * 
     * @param {number} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGetRaw(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerEvaluationModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGet(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerEvaluationModelBaseResponseModel>;

    /**
     * 
     * @param {string} [evaluationName] 
     * @param {string} [dateStart] 
     * @param {string} [dateEnd] 
     * @param {boolean} [activeFlag] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfigEvaluationTopicGetSearchModelBaseResponsePagination>>;

    /**
     */
    apiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGet(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfigEvaluationTopicGetSearchModelBaseResponsePagination>;

    /**
     * 
     * @param {string} [evaluationName] 
     * @param {string} [dateStart] 
     * @param {string} [dateEnd] 
     * @param {boolean} [activeFlag] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfigEvaluationTopicGetSearchModelBaseResponsePagination>>;

    /**
     */
    apiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGet(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfigEvaluationTopicGetSearchModelBaseResponsePagination>;

    /**
     * 
     * @param {number} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGetRaw(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerCreditScoreModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGet(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerCreditScoreModelBaseResponseModel>;

    /**
     * 
     * @param {string} [creditScoreName] 
     * @param {string} [updateDateStart] 
     * @param {string} [updateDateEnd] 
     * @param {boolean} [activeFlag] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerCreditScoreGetSearchModelBaseResponsePagination>>;

    /**
     */
    apiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGet(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerCreditScoreGetSearchModelBaseResponsePagination>;

    /**
     * 
     * @param {number} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGetRaw(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGradeModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGet(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGradeModelBaseResponseModel>;

    /**
     * 
     * @param {string} [gradeName] 
     * @param {string} [updateDateStart] 
     * @param {string} [updateDateEnd] 
     * @param {boolean} [activeFlag] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetMasterCustomerGradeListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerGradeListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGradeGetSearchModelBaseResponsePagination>>;

    /**
     */
    apiConfigCustomerEvaluationGetMasterCustomerGradeListGet(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerGradeListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGradeGetSearchModelBaseResponsePagination>;

    /**
     * 
     * @param {SysEvaluationConfigId} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPostRaw(requestParameters: ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SysCustomerEvaluationConfigModelListBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPost(requestParameters: ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SysCustomerEvaluationConfigModelListBaseResponseModel>;

    /**
     * 
     * @param {string} [evaluationName] 
     * @param {number} [pageIndex] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SysCustomerEvaluationConfigGetSearchModelBaseResponsePagination>>;

    /**
     */
    apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGet(requestParameters: ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SysCustomerEvaluationConfigGetSearchModelBaseResponsePagination>;

    /**
     * 
     * @param {UpdateCustomerEvaluationActiveFlag} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatchRaw(requestParameters: ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateCustomerEvaluationActiveFlagBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatch(requestParameters: ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateCustomerEvaluationActiveFlagBaseResponseModel>;

    /**
     * 
     * @param {MasterCustomerEvaluationModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationUpdateConfigEvaluationTopicPutRaw(requestParameters: ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerEvaluationModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationUpdateConfigEvaluationTopicPut(requestParameters: ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerEvaluationModelBaseResponseModel>;

    /**
     * 
     * @param {UpdateActiveFlagMasterCustomerCreditScoreModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatchRaw(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateActiveFlagMasterCustomerCreditScoreModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatch(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateActiveFlagMasterCustomerCreditScoreModelBaseResponseModel>;

    /**
     * 
     * @param {MasterCustomerCreditScoreModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePutRaw(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerCreditScoreModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePut(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerCreditScoreModelBaseResponseModel>;

    /**
     * 
     * @param {UpdateActiveFlagMasterCustomerGradeModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatchRaw(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateActiveFlagMasterCustomerGradeModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatch(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateActiveFlagMasterCustomerGradeModelBaseResponseModel>;

    /**
     * 
     * @param {MasterCustomerGradeModel} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigCustomerEvaluationApiInterface
     */
    apiConfigCustomerEvaluationUpdateMasterCustomerGradePutRaw(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerGradePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGradeModelBaseResponseModel>>;

    /**
     */
    apiConfigCustomerEvaluationUpdateMasterCustomerGradePut(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerGradePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGradeModelBaseResponseModel>;

}

/**
 * 
 */
export class ConfigCustomerEvaluationApi extends runtime.BaseAPI implements ConfigCustomerEvaluationApiInterface {

    /**
     */
    async apiConfigCustomerEvaluationCreateConfigEvaluationTopicPostRaw(requestParameters: ApiConfigCustomerEvaluationCreateConfigEvaluationTopicPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerEvaluationModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/create-config-evaluation-topic`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationCreateConfigEvaluationTopicPost(requestParameters: ApiConfigCustomerEvaluationCreateConfigEvaluationTopicPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerEvaluationModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationCreateConfigEvaluationTopicPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationCreateMasterCustomerCreditScorePostRaw(requestParameters: ApiConfigCustomerEvaluationCreateMasterCustomerCreditScorePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerCreditScoreModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/create-master-customer-credit-score`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationCreateMasterCustomerCreditScorePost(requestParameters: ApiConfigCustomerEvaluationCreateMasterCustomerCreditScorePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerCreditScoreModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationCreateMasterCustomerCreditScorePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationCreateMasterCustomerGradePostRaw(requestParameters: ApiConfigCustomerEvaluationCreateMasterCustomerGradePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGradeModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/create-master-customer-grade`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationCreateMasterCustomerGradePost(requestParameters: ApiConfigCustomerEvaluationCreateMasterCustomerGradePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGradeModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationCreateMasterCustomerGradePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPostRaw(requestParameters: ApiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerEvaluationModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/duplicate-config-evaluation-topic`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPost(requestParameters: ApiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerEvaluationModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationDuplicateConfigEvaluationTopicPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGetRaw(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerEvaluationModelBaseResponseModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-config-evaluation-topic-by-id/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGet(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerEvaluationModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationGetConfigEvaluationTopicByIdIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfigEvaluationTopicGetSearchModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['evaluationName'] != null) {
            queryParameters['evaluation_name'] = requestParameters['evaluationName'];
        }

        if (requestParameters['dateStart'] != null) {
            queryParameters['date_start'] = requestParameters['dateStart'];
        }

        if (requestParameters['dateEnd'] != null) {
            queryParameters['date_end'] = requestParameters['dateEnd'];
        }

        if (requestParameters['activeFlag'] != null) {
            queryParameters['active_flag'] = requestParameters['activeFlag'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-config-evaluation-topic-credit-score-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGet(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfigEvaluationTopicGetSearchModelBaseResponsePagination> {
        const response = await this.apiConfigCustomerEvaluationGetConfigEvaluationTopicCreditScoreListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfigEvaluationTopicGetSearchModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['evaluationName'] != null) {
            queryParameters['evaluation_name'] = requestParameters['evaluationName'];
        }

        if (requestParameters['dateStart'] != null) {
            queryParameters['date_start'] = requestParameters['dateStart'];
        }

        if (requestParameters['dateEnd'] != null) {
            queryParameters['date_end'] = requestParameters['dateEnd'];
        }

        if (requestParameters['activeFlag'] != null) {
            queryParameters['active_flag'] = requestParameters['activeFlag'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-config-evaluation-topic-grade-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGet(requestParameters: ApiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfigEvaluationTopicGetSearchModelBaseResponsePagination> {
        const response = await this.apiConfigCustomerEvaluationGetConfigEvaluationTopicGradeListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGetRaw(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerCreditScoreModelBaseResponseModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-master-customer-credit-score-by-id/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGet(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerCreditScoreModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationGetMasterCustomerCreditScoreByIdIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerCreditScoreGetSearchModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['creditScoreName'] != null) {
            queryParameters['credit_score_name'] = requestParameters['creditScoreName'];
        }

        if (requestParameters['updateDateStart'] != null) {
            queryParameters['update_date_start'] = requestParameters['updateDateStart'];
        }

        if (requestParameters['updateDateEnd'] != null) {
            queryParameters['update_date_end'] = requestParameters['updateDateEnd'];
        }

        if (requestParameters['activeFlag'] != null) {
            queryParameters['active_flag'] = requestParameters['activeFlag'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-master-customer-credit-score-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGet(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerCreditScoreGetSearchModelBaseResponsePagination> {
        const response = await this.apiConfigCustomerEvaluationGetMasterCustomerCreditScoreListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGetRaw(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGradeModelBaseResponseModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-master-customer-grade-by-id/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGet(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGradeModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationGetMasterCustomerGradeByIdIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetMasterCustomerGradeListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerGradeListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGradeGetSearchModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['gradeName'] != null) {
            queryParameters['grade_name'] = requestParameters['gradeName'];
        }

        if (requestParameters['updateDateStart'] != null) {
            queryParameters['update_date_start'] = requestParameters['updateDateStart'];
        }

        if (requestParameters['updateDateEnd'] != null) {
            queryParameters['update_date_end'] = requestParameters['updateDateEnd'];
        }

        if (requestParameters['activeFlag'] != null) {
            queryParameters['active_flag'] = requestParameters['activeFlag'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-master-customer-grade-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetMasterCustomerGradeListGet(requestParameters: ApiConfigCustomerEvaluationGetMasterCustomerGradeListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGradeGetSearchModelBaseResponsePagination> {
        const response = await this.apiConfigCustomerEvaluationGetMasterCustomerGradeListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPostRaw(requestParameters: ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SysCustomerEvaluationConfigModelListBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-sys-customer-evaluation-config-by-list-id`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPost(requestParameters: ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SysCustomerEvaluationConfigModelListBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigByListIdPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGetRaw(requestParameters: ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SysCustomerEvaluationConfigGetSearchModelBaseResponsePagination>> {
        const queryParameters: any = {};

        if (requestParameters['evaluationName'] != null) {
            queryParameters['evaluation_name'] = requestParameters['evaluationName'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/get-sys-customer-evaluation-config-list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGet(requestParameters: ApiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SysCustomerEvaluationConfigGetSearchModelBaseResponsePagination> {
        const response = await this.apiConfigCustomerEvaluationGetSysCustomerEvaluationConfigListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatchRaw(requestParameters: ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateCustomerEvaluationActiveFlagBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/update-config-evaluation-topic-active-flag`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatch(requestParameters: ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatchRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateCustomerEvaluationActiveFlagBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationUpdateConfigEvaluationTopicActiveFlagPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateConfigEvaluationTopicPutRaw(requestParameters: ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerEvaluationModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/update-config-evaluation-topic`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateConfigEvaluationTopicPut(requestParameters: ApiConfigCustomerEvaluationUpdateConfigEvaluationTopicPutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerEvaluationModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationUpdateConfigEvaluationTopicPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatchRaw(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateActiveFlagMasterCustomerCreditScoreModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/update-master-customer-credit-score-active-flag`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatch(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatchRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateActiveFlagMasterCustomerCreditScoreModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationUpdateMasterCustomerCreditScoreActiveFlagPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePutRaw(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerCreditScoreModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/update-master-customer-credit-score`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePut(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerCreditScoreModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationUpdateMasterCustomerCreditScorePutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatchRaw(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateActiveFlagMasterCustomerGradeModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/update-master-customer-grade-active-flag`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatch(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatchRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateActiveFlagMasterCustomerGradeModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationUpdateMasterCustomerGradeActiveFlagPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateMasterCustomerGradePutRaw(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerGradePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MasterCustomerGradeModelBaseResponseModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // oauth2 authentication
        }

        const response = await this.request({
            path: `/api/ConfigCustomerEvaluation/update-master-customer-grade`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiConfigCustomerEvaluationUpdateMasterCustomerGradePut(requestParameters: ApiConfigCustomerEvaluationUpdateMasterCustomerGradePutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MasterCustomerGradeModelBaseResponseModel> {
        const response = await this.apiConfigCustomerEvaluationUpdateMasterCustomerGradePutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
